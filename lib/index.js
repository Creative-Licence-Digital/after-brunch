// Generated by CoffeeScript 1.10.0
(function() {
  var AfterBrunch, exec, sysPath;

  sysPath = require('path');

  exec = require('child_process').exec;

  module.exports = AfterBrunch = (function() {
    AfterBrunch.prototype.brunchPlugin = true;

    AfterBrunch.prototype.params = {
      disableOnWatch: false,
      commands: []
    };

    function AfterBrunch(config) {
      var ref, ref1, ref2;
      this.config = config;
      this.params.disableOnWatch = (ref = this.config.plugins.afterBrunch.disableOnWatch) != null ? ref : false;
      if (this.config.plugins.afterBrunch.commands === void 0) {
        this.params.commands = (ref1 = this.config.plugins.afterBrunch) != null ? ref1 : [];
      } else if ((this.params.disableOnWatch === false) || (this.params.disableOnWatch === true && this.config.persistent === false)) {
        this.params.commands = (ref2 = this.config.plugins.afterBrunch.commands) != null ? ref2 : [];
      }
      return;
    }

    AfterBrunch.prototype.onCompile = function(generatedFiles) {
      var command, i, len, ref;
      ref = this.params.commands;
      for (i = 0, len = ref.length; i < len; i++) {
        command = ref[i];
        exec(command, function(error, stdout, stderr) {
          if (stdout) {
            console.log(stdout);
          }
          if (error) {
            console.log(error.message);
          }
          if (stderr) {
            return console.log(stderr);
          }
        });
      }
    };

    return AfterBrunch;

  })();

}).call(this);
